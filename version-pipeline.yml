resource_types:
- name: pivnet
  type: docker-image
  source:
    repository: pivotalcf/pivnet-resource
    tag: latest-final
resources:
- name: code-repo
  type: git
  source:
    uri: git@ssh.dev.azure.com:v3/humana/DevOps/pcf_automation
    branch: dev
    private_key: ((git_keys.private_key))
- name: schedule
  type: time
  source:
    interval: {{backup_interval}}
    start: "02:00 AM"
    stop: "05:00 PM"
    location: America/Chicago

- name: om-cli
  type: github-release
  source:
    user: pivotal-cf
    repository: om
    access_token: {{github_token}}

- name: jq
  type: github-release
  source:
    user: stedolan
    repository: jq
    access_token: {{github_token}}

- name: pivnet-cli
  type: github-release
  source:
    user: pivotal-cf
    repository: pivnet-cli
    access_token: {{github_token}}

- name: pcf-automation-git
  type: git
  source:
    private_key: ((git_private_key))
    uri: ((git_uri))
    branch: ((git_branch))

- name: pcf-wiki-git
  type: git
  source:
    private_key: ((git_private_key))
    uri: ((wiki_git_uri))
    branch: ((wiki_git_branch))

- name: platform-automation-pivnet
  type: pivnet
  source:
    api_token: ((pivnet_token))
    product_slug: platform-automation
    product_version: ((platform_automation_version))
    sort_by: semver

jobs:
- name: check-om-versions
  serial: true
  plan:
  - aggregate:
    - get: schedule
      trigger: true
    - get: code-repo
    - get: jq
      params:
        globs:
        - "*linux64*"
    - get: om-cli
      params:
        globs:
        - "*om-linux*"
    - get: pivnet-cli
      params:
        globs:
        - "*linux*"
    - get: pcf-automation-image
      params:
        unpack: true
        globs:
        - platform-automation-image-*
      resource: platform-automation-pivnet
    - get: pcf-automation-git
    - get: pcf-wiki-git

  - task: check-om-versions
    file: code-repo/bbr/custom-tasks/versions/task.yml
#    file: code-repo/tasks/check-om-versions/task.yml
    params:
      SKIP_SSL_VALIDATION: true
      OPSMAN_URL: ((opsman_target))
      OPSMAN_USERNAME: ((opsman_username))
      OPSMAN_PASSWORD: ((opsman_password))
      PIVNET_API_TOKEN: ((pivnet_token))
      ZSCALER_CERT: ((zscaler.certificate))
    ensure: &make-state-commit
      do:
        - task: make-commit
          image: pcf-automation-image
          input_mapping:
            configuration: pcf-automation-git
            generated-versions: generated-versions
          config:
            platform: linux
            inputs:
              - name: generated-versions 
              - name: configuration 
            outputs:
              - name: configuration-commit
            run:
              path: bash
              args:
                - -c
                - |
                  set -eux
                  git clone -b ((git_branch)) configuration configuration-commit
                  cp generated-versions/current_versions.txt configuration-commit/state/((foundation))/current_versions.txt
                  cd configuration-commit
                  git add -A
                  git config --global user.email "bot@example.com"
                  git config --global user.name "Friendly Neighborhood Bot"
                  git commit -m 'updated the state file' || true
        - put: pcf-automation-git
          params:
            repository: configuration-commit
            rebase: true
  
  - task: generate-html-output
    image: pcf-automation-image
    file: code-repo/bbr/custom-tasks/versions/html-task.yml
    input_mapping:
      generated-html: generated-versions
    ensure: &make-state-commit
      do:
        - task: make-commit
          image: pcf-automation-image
          input_mapping:
            configuration: pcf-automation-git
            generated-html: generated-html
          config:
            platform: linux
            inputs:
              - name: generated-html
              - name: configuration
            outputs:
              - name: configuration-commit
            run:
              path: bash
              args:
                - -c
                - |
                  set -eux
                  git clone -b ((git_branch)) configuration configuration-commit
                  cp generated-html/current_versions.html configuration-commit/state/((foundation))/current_versions.html
                  cd configuration-commit
                  git add -A
                  git config --global user.email "bot@example.com"
                  git config --global user.name "Friendly Neighborhood Bot"
                  git commit -m 'updated the state file' || true
        - put: pcf-automation-git
          params:
            repository: configuration-commit
            rebase: true

  - task: generate-certs-output
    image: pcf-automation-image
    file: code-repo/bbr/custom-tasks/versions/certs-task.yml
    params:
      OPSMAN_URL: ((opsman_target))
      OPSMAN_USERNAME: ((opsman_username))
      OPSMAN_PASSWORD: ((opsman_password))
      ZSCALER_CERT: ((zscaler.certificate))
    input_mapping:
      generated-html: generated-versions
    ensure: &make-state-commit
      do:
        - task: make-commit
          image: pcf-automation-image
          input_mapping:
            configuration: pcf-wiki-git
            generated-html: generated-html
          config:
            platform: linux
            inputs:
              - name: generated-html
              - name: configuration
            outputs:
              - name: configuration-commit
            run:
              path: bash
              args:
                - -c
                - |
                  set -eux
                  git clone -b ((wiki_git_branch)) configuration configuration-commit
                  cp generated-html/certs_expiry.html configuration-commit/views/partials/certs-expiry-((foundation)).html
                  cd configuration-commit
                  git add -A
                  git config --global user.email "bot@example.com"
                  git config --global user.name "Friendly Neighborhood Bot"
                  git commit -m 'updated the state file' || true
        - put: pcf-wiki-git
          params:
            repository: configuration-commit
            rebase: true
